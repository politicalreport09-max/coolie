version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: coolie-postgres
    environment:
      POSTGRES_DB: coolie_db
      POSTGRES_USER: coolie_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - coolie-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: coolie-backend
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://coolie_user:${POSTGRES_PASSWORD}@postgres:5432/coolie_db
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=${FRONTEND_URL}
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    networks:
      - coolie-network
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads

  # Frontend (React/Vite)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.prod
    container_name: coolie-frontend
    environment:
      - VITE_API_URL=${BACKEND_URL}
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - coolie-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: coolie-nginx
    ports:
      - "443:443"
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - coolie-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  coolie-network:
    driver: bridge